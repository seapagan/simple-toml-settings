[tool.poetry]
name = "simple-toml-settings"
version = "0.3.2"
description = "A Python library to save your settings in a TOML file."
authors = ["Grant Ramsay <seapagan@gmail.com>"]
readme = "README.md"
license = "MIT"

packages = [{ include = "simple_toml_settings" }]

documentation = "https://seapagan.github.io/simple-toml-settings/"
repository = "https://github.com/seapagan/simple-toml-settings"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.urls]
# customize the below URLs to point to your own GitHub repo. These will be
# shown on [Pypi.org](https://pypi.org/) if you are creating a public package.
"Pull Requests" = "https://github.com/seapagan/simple-toml-settings/pulls"
"Bug Tracker" = "https://github.com/seapagan/simple-toml-settings/issues"
"Changelog" = "https://github.com/seapagan/simple-toml-settings/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
rtoml = "^0.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Configure dev dependencies you can add or remove as needed
[tool.poetry.group.dev.dependencies]
# linting, type-checking and security checks
isort = "^5.12.0"
mypy = "^1.4.1"
pre-commit = "^3.3.3"
pymarkdownlnt = "^0.9.12"
ruff = "^0.1.3"

# task runner
poethepoet = "^0.24.1"

# testing
pytest = "^7.4.0"
pytest-cov = "^4.0.0"
pytest-xdist = "^3.2.1"
pytest-sugar = "^0.9.7"
pytest-randomly = "^3.13.0"
pytest-reverse = "^1.7.0"
pytest-asyncio = ">=0.21.1,<0.23.0"
pytest-mock = "^3.11.1"
mock = "^5.1.0"
faker = ">=19.2,<21.0"
pyfakefs = "^5.2.4"

# documentation
github-changelog-md = ">=0.3,<0.8"
mkdocs = "^1.4.3"
mkdocs-autorefs = "^0.5.0"
mkdocs-material = "^9.1.19"
mkdocs-minify-plugin = "^0.7.0"
pymdown-extensions = "^10.1"
pygments = "^2.15.1"

# setup PoeThePoet tasks
[tool.poe.tasks]
pre.cmd = "pre-commit run --all-files"
pre.help = "Run pre-commit checks"
mypy.cmd = "mypy simple_toml_settings/**/*.py tests/**/*.py --strict"
mypy.help = "Run mypy checks"
format.help = "Format code with Ruff"
format.cmd = "ruff format ."
ruff.help = "Run Ruff checks"
ruff.cmd = "ruff check ."
test.help = "Run tests using Pytest"
test.cmd = "pytest"
markdown.cmd = "pymarkdown scan  -r simple_toml_settings/**/*.md docs/**/*.md"
markdown.help = "Run markdown checks"

# run all linting checks in sequence. we want to run them all, even if one fails
lint.ignore_fail = "return_non_zero"
lint.sequence = ["format", "ruff", "mypy", "markdown"]
lint.help = "Run all linting checks"

"docs:publish".cmd = "mkdocs gh-deploy"
"docs:publish".help = "Publish documentation to GitHub Pages"
"docs:build".cmd = "mkdocs build"
"docs:build".help = "Build documentation locally to './site' folder"
"docs:serve".cmd = "mkdocs serve -w TODO.md -w CHANGELOG.md -w CONTRIBUTING.md"
"docs:serve".help = "Serve documentation locally"
"docs:serve:all".cmd = "mkdocs serve -w TODO.md -w CHANGELOG.md -w CONTRIBUTING.md -a 0.0.0.0:9000"
"docs:serve:all".help = "Serve documentation locally on all interfaces"

changelog.cmd = "github-changelog-md"
changelog.help = "Generate the CHANGELOG.md file"

# configure assorted tools and linters
[tool.pymarkdown]
plugins.md014.enabled = false
plugins.md046.enabled = false

[tool.pytest.ini_options]
addopts = ["--cov", "--cov-report", "term-missing", "--cov-report", "html"]
filterwarnings = []
mock_use_standalone_module = true

[tool.coverage.run]
# source = []
omit = ["*/tests/*"]

[tool.ruff]
line-length = 80
select = ["ALL"] # we are being very strict!
ignore = [
  "ANN101",
  "PGH003",
  "FBT002",
  "FBT003",
  "B006",
] # These rules are too strict even for us 😝
extend-ignore = ["COM812", "ISC001"] # these are ignored for ruff formatting

src = ["simple_toml_settings"]
target-version = "py39"        # minimum python version supported

[tool.ruff.format]
indent-style = "space"
quote-style = "double"

[tool.ruff.pep8-naming]
classmethod-decorators = ["pydantic.validator", "pydantic.root_validator"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.extend-per-file-ignores]
"tests/**/*.py" = [
  "S101",   # we can (and MUST!) use 'assert' in test files.
  "ANN001", # annotations for fixtures are sometimes a pain for test files
]
"simple_toml_settings/main.py" = [
  "UP007",
  "PLR0913",
] # These cause issues in Typer Apps

[tool.ruff.isort]
known-first-party = ["simple_toml_settings"]

[tool.ruff.pyupgrade]
keep-runtime-typing = true

[[tool.mypy.overrides]]
disable_error_code = ["method-assign", "no-untyped-def", "attr-defined"]
module = "tests.*"
